name: Build and Deploy to Oracle Cloud Kubernetes

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Build the Docker image
      run: docker build -t muhammadsinan/nodejs-app:latest .

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      # env:
      #     DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      #     DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      # run: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin
      # run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      # test1
    - name: Push Docker image to Docker Hub
      run: docker push muhammadsinan/nodejs-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up OCI CLI
      uses: oracle-actions/run-oci-cli-command@v1
      with:
        oci-config-file: ${{ secrets.OCI_CLI_CONFIG_FILE }}

    - name: Retrieve the OCID of a named compartment in tenancy
      uses: oracle-actions/run-oci-cli-command@v1.2.0
      id: find-compartment-id
      with:
          command: 'iam compartment list --compartment-id-in-subtree=true'
          query: "data[?name=='testing'].id"
    #  OCi setting -----------------------------------
    - name: Install Python 3
      run: sudo apt-get install -y python3 python3-pip
    - name: Install OCI CLI
      run: |
        bash -c "$(curl -L https://raw.githubusercontent.com/oracle/oci-cli/master/scripts/install/install.sh)" -- --accept-all-defaults

    - name: Verify OCI CLI installation
      run: /home/runner/bin/oci --version

    - name: Set up OCI config directory
      run: |
        mkdir -p ~/.oci
        echo "${{ secrets.OCI_CLI_CONFIG_FILE }}" > ~/.oci/config
        echo "${{ secrets.OCI_CLI_KEY_FILE }}" > ~/.oci/oci_api_key.pem
        sudo chmod 600 ~/.oci/oci_api_key.pem

    # - name: Verify OCI CLI installation
    #   run: oci --version
      
    #  oci setting ends -----------------------------
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    # - name: Set up Kubernetes
    #   uses: azure/setup-kubectl@v1
    #   with:
    #     version: 'latest'
    #  config updates

    # - name: Set up kubectl
    #   uses: azure/kubernetes-set-context@v1
    #   with:
    #     kubeconfig: ${{ secrets.KUBE_CONFIG }}

    # - name: Deploy to OKE
    #   run: |
    #     kubectl set image deployment/myapp myapp=<DOCKERHUB_USERNAME>/<DOCKERHUB_REPO>:${{ github.sha }}
    #   env:
    #     DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    #     DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Create .kube directory
      run: mkdir -p /home/runner/.kube


    - name: Configure kubectl
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > $HOME/.kube/config
    - name: Debug
      run: |
            ls -l /home/runner/.kube/
            cat /home/runner/.kube/config

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f deployment.yml
        kubectl apply -f service.yml
